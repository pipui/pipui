@import "Palette";
@import "Globals";
@import "Mixins";

@include IMPORT_DEFAULT_FONT;

* { margin: 0; padding: 0; font-family: $DEFAULT_FONT_FAMILY; }

body {
  font-size: $DEFAULT_FONT_SIZE;
  color: $DEFAULT_COLOR;
  min-height: 100vh;
  word-break: break-word;
  word-wrap: break-word;
}

div, form, footer, header, a, ul, ol, li, header, input, button, textarea, label, select, table, span {
  box-sizing: border-box;
}

a {
  text-decoration: none;
  color: map_get($PALETTE, 'light-blue');
}

h1,.h1,h2,.h2,h3,.h3,h4,.h4,h5,.h5,h6,.h6 {
  word-wrap: break-word;
  word-break: break-word;
  line-height: normal;
}

// h1...h6 loop
@for $i from 1 through 6 {
  $h-loop-div: 7 - $i;

  h#{$i},.h#{$i} {
    font-size: 1px * ($DEFAULT_DIVIDER + ($h-loop-div * $DEFAULT_DIVIDER)) * 2;
  }
}

.min-height-100 {
  min-height: 100vh;
}

.min-height-50 {
  min-height: 50vh;
}

.window {
  font-size: $DEFAULT_FONT_SIZE;
  display: block;
  width: 100%;
  background-color: map_get($PALETTE, 'white');
  color: $DEFAULT_SUB_COLOR;
  box-sizing: border-box;
  box-shadow: $DEFAULT_BOX_SHADOW;
  border-radius: $DEFAULT_BORDER_RADIUS;
  padding: $DEFAULT_PADDING_WIDTH;
}

// display & important settings
@each $display_loop in none, inline, inline-block, block, grid, inline-grid, flex, inline-flex {
  .#{$display_loop}, .d-#{$display_loop} {
    display: $display_loop;
  }

  .#{$display_loop}-i, .d-#{$display_loop}-i {
    display: $display_loop !important;
  }
}

.container {
  margin-left: auto;
  margin-right: auto;
  width: $DEFAULT_RESPONSIVE_BREAKPOINT;
  padding: {
    left: $DEFAULT_PADDING_WIDTH;
    right: $DEFAULT_PADDING_WIDTH;
  }
}

// overflow & important settings
@each $of_loop in hidden, visible, auto, scroll {
  .of-#{$of_loop} {
    overflow: $of_loop;
  }

  .of-x-#{$of_loop} {
    overflow-x: $of_loop;
  }

  .of-y-#{$of_loop} {
    overflow-y: $of_loop;
  }

  .of-#{$of_loop}-i {
    overflow: $of_loop !important;
  }

  .of-x-#{$of_loop}-i {
    overflow-x: $of_loop !important;;
  }

  .of-y-#{$of_loop}-i {
    overflow-y: $of_loop !important;;
  }
}

// text & important settings
.text-left { text-align: left; }
.text-center { text-align: center; }
.text-right { text-align: right; }
.text-justify { text-align: justify; }
.text-upper { text-transform: uppercase; }
.text-lower { text-transform: lowercase; }
.text-bold { font-weight: bold; }
.text-italic { font-style: italic; }
.text-strike { text-decoration: line-through; }
.text-capitalize { text-transform: capitalize; }
.text-underline { text-decoration-line: underline; }
.text-overline { text-decoration-line: overline; }

.text-left-i { text-align: left !important; }
.text-center-i { text-align: center !important; }
.text-right-i { text-align: right !important; }
.text-justify-i { text-align: justify !important; }
.text-upper-i { text-transform: uppercase !important; }
.text-lower-i { text-transform: lowercase !important; }
.text-bold-i { font-weight: bold !important; }
.text-italic-i { font-style: italic !important; }
.text-strike-i { text-decoration: line-through !important; }
.text-capitalize-i { text-transform: capitalize !important; }
.text-underline-i { text-decoration-line: underline; }
.text-overline-i { text-decoration-line: overline !important; }

// custom overflow
.text-overflow {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

.text-overflow-i {
  overflow: hidden !important;
  white-space: nowrap !important;
  text-overflow: ellipsis !important;
}

// Weight & important settings
$weight-size-loop: 100;
@while $weight-size-loop <= 900 {
  .weight-#{$weight-size-loop} {
    font-weight: $weight-size-loop;
  }

  .weight-#{$weight-size-loop}-i {
    font-weight: $weight-size-loop !important;
  }

  $weight-size-loop: $weight-size-loop + 100;
}

// cursor & important settings
@each $cursor-name-loop in none, auto, default, pointer, progress, help, move, text, cell, crosshair, alias,
vertical-text, copy, no-drop, all-scroll,  col-resize, row-resize, nesw-resize,
nwse-resize, n-resize, e-resize, nw-resize, grab, grabbing, zoom-in, zoom-out {
  .cursor-#{$cursor-name-loop} {
    cursor: $cursor-name-loop;
  }

  .cursor-#{$cursor-name-loop}-i {
    cursor: $cursor-name-loop !important;
  }
}

// vertical align & important settings
@each $align-name-loop in top, center, middle, bottom, baseline, sub, super, text-bottom, text-top {
  @if($align-name-loop == center){
    $align-name-loop: middle;
  }

  .v-align-#{$align-name-loop} {
    vertical-align: $align-name-loop;
  }

  .v-align-#{$align-name-loop}-i {
    vertical-align: $align-name-loop !important;
  }
}

// opacity & important settings
@for $opacity-loop from 0 through 10 {
  .opacity-#{$opacity-loop} {
    opacity: $opacity-loop * 0.1;
  }

  .opacity-#{$opacity-loop}-i {
    opacity: $opacity-loop * 0.1 !important;
  }
}

// position & important settings
@each $position-loop in relative, absolute, fixed, static {
  .#{$position-loop} {
    position: $position-loop;
  }

  .#{$position-loop}-i {
    position: $position-loop !important;
  }
}

// z-index & important settings
@for $index-loop from 0 through $Z_INDEX_MAX {
  .zid-#{$index-loop} {
    z-index: $index-loop;
  }

  .zid-#{$index-loop}-i {
    z-index: $index-loop !important;
  }
}

// positions top, right, bottom, left & important settings
@each $position-loop in top, left, right, bottom {
  $position-loop-i: $POSITIONS_MIN;

  @while $position-loop-i <= $POSITIONS_MAX {
    .#{$position-loop}-#{$position-loop-i} {
      top: $position-loop-i * $POSITIONS_WRAP + 0px;
    }

    .#{$position-loop}-#{$position-loop-i}-i {
      top: $position-loop-i * $POSITIONS_WRAP + 0px !important;
    }

    $position-loop-i: $position-loop-i + $POSITIONS_WRAP + 0px;
  }
}

// white space & important settings
@each $space-loop in normal, nowrap, pre, pre-wrap, pre-line, unset {
  .w-space-#{$space-loop} {
    white-space: $space-loop;
  }

  .w-space-#{$space-loop}-i {
    white-space: $space-loop !important;
  }
}

.scroll-styled {
  scrollbar-width: thin;
}

.scroll-styled::-webkit-scrollbar{
  width: 8px;
  height: 8px;
  background-color: map_get($PALETTE, 'gray-300');
  border-radius: $DEFAULT_BORDER_RADIUS;
  left: 5px;
}

.scroll-styled::-webkit-scrollbar-track{
  border-radius: $DEFAULT_BORDER_RADIUS;
}

.scroll-styled::-webkit-scrollbar-thumb{
  background-color: map_get($PALETTE, 'gray-700');
  border-radius: $DEFAULT_BORDER_RADIUS;
}